Sharding is horizontal partitioning.
Sharding uses shared-nothing architecture.  it does not share any common data or computing resource. 
Auto-sharding, Mysql Cluster, MongoDB. 
key based sharding
  Key is generated via hash function, which will determins which shard to go. 
  evenly distribute data.
  but when you dynamically add or remove shards the hash value would be re-generated for most of values
range based sharding
  shard based on the value of the data, such as tag_id. its easy to implement, but can not ensure a evenly distributed sharding, but is easier when add/remove node. 
  
cassandra:
  Data replication
  Cassandra stores replicas on multiple nodes to ensure reliability and fault tolerance. A replication strategy determines the nodes where replicas are placed. The total number of replicas across the cluster is referred to as the replication factor. A replication factor of 1 means that there is only one copy of each row in the cluster. If the node containing the row goes down, the row cannot be retrieved. A replication factor of 2 means two copies of each row, where each copy is on a different node. All replicas are equally important; there is no primary or master replica. As a general rule, the replication factor should not exceed the number of nodes in the cluster. However, you can increase the replication factor and then add the desired number of nodes later.

  Two replication strategies are available:

  SimpleStrategy: Use only for a single datacenter and one rack. If you ever intend more than one datacenter, use the NetworkTopologyStrategy.
  NetworkTopologyStrategy: Highly recommended for most deployments because it is much easier to expand to multiple datacenters when required by future expansion.
